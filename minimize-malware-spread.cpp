class Solution {
public:
    vector<bool> vis;
    vector<bool> mal;
    int n;
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        n = graph.size();
        int max_val = 0;
        vis.resize(n, false);
        mal.resize(n, false);
        sort(initial.begin(), initial.end());
        int res = initial[0];
        for (int i = 0; i < initial.size(); i ++) {
            mal[initial[i]] = true;
        }
        for (int i = 0; i < initial.size(); i ++) {
            int x= initial[i];
            if (!vis[x]) {
                pair<int, int> r = dfs(x, graph);
                if (r.first == 1 && r.second > max_val) {
                    max_val = r.second;
                    res = x;
                }
            }
        }
        return res;
    }
    
    pair<int, int> dfs(int x, vector<vector<int>>& graph) {
        vis[x] = true;
        pair<int, int> res = make_pair(0, 1);
        if (mal[x]) res.first ++;
        
        for (int i = 0; i < n; i ++) {
            if (!vis[i] && graph[x][i]) {
                pair<int, int> r = dfs(i, graph);
                res.first += r.first;
                res.second += r.second;
            }
        }
        
        return res;
    }
};